services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        WWWGROUP: "${WWWGROUP:-1000}"
    container_name: laravel_backend
    ports:
      - "${APP_PORT:-8080}:80"
    volumes:
      - ./backend:/var/www/html
      - /var/www/html/vendor
      - /var/www/html/node_modules
      - /var/www/html/bootstrap/cache
      - /var/www/html/storage/app
      - /var/www/html/storage/framework
      - /var/www/html/storage/logs
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      WWWUSER: "${WWWUSER:-sail}"
      LARAVEL_SAIL: 1
      XDEBUG_MODE: "${SAIL_XDEBUG_MODE:-off}"
      XDEBUG_CONFIG: "${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}"
      IGNITION_LOCAL_SITES_PATH: "${PWD}"
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: "${DB_DATABASE:-laravel}"
      DB_USERNAME: "${DB_USERNAME:-sail}"
      DB_PASSWORD: "${DB_PASSWORD:-password}"
      REDIS_HOST: redis
      REDIS_PASSWORD: null
      REDIS_PORT: 6379
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vue_frontend
    ports:
      - "${VITE_PORT:-5174}:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/dist
    networks:
      - app-network
    environment:
      - VITE_API_URL=http://localhost:${APP_PORT:-8080}/api
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 5173"
    depends_on:
      - backend
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:5173",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  mysql:
    image: "mysql:8.0"
    container_name: mysql_db
    ports:
      - "${DB_PORT:-3306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD:-password}"
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: "${DB_DATABASE:-laravel}"
      MYSQL_USER: "${DB_USERNAME:-sail}"
      MYSQL_PASSWORD: "${DB_PASSWORD:-password}"
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    command: >
      --default-authentication-plugin=mysql_native_password
      --innodb-buffer-pool-size=128M
      --innodb-log-file-size=32M
      --innodb-flush-log-at-trx-commit=2
      --skip-innodb-doublewrite
      --skip-log-bin
      --performance-schema=OFF
      --skip-name-resolve
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${DB_PASSWORD:-password}",
        ]
      retries: 10
      timeout: 5s
      interval: 5s
      start_period: 10s
    restart: unless-stopped

  redis:
    image: "redis:7.2-alpine"
    container_name: redis_cache
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    command: >
      redis-server
      --save ""
      --appendonly no
      --maxmemory 128mb
      --maxmemory-policy allkeys-lru
      --tcp-backlog 128
      --databases 1
      --rdbchecksum no
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 1s
      interval: 2s
      start_period: 2s
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
